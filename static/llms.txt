# Moderne Documentation

> Large-scale automated source code refactoring

This site documents the Moderne Platform, Moderne CLI, and related tools for automated code remediation at enterprise scale.

## Getting started

* [Introduction](https://docs.moderne.io/): Platform overview and capabilities
* [Proof of value process](https://docs.moderne.io/user-documentation/moderne-platform/getting-started/proof-of-value): Guide for evaluating Moderne
* [Running your first recipe](https://docs.moderne.io/user-documentation/moderne-platform/getting-started/running-your-first-recipe): Step-by-step guide for using the Moderne Platform

## Moderne Platform (user guides)

* [Activity view](https://docs.moderne.io/user-documentation/moderne-platform/getting-started/activity-view): Track recipe runs and results
* [Code quality](https://docs.moderne.io/user-documentation/moderne-platform/getting-started/code-quality): Enhancing code quality with Moderne
* [Code mods](https://docs.moderne.io/user-documentation/moderne-platform/getting-started/code-mods): Custom JavaScript transformations
* [Data tables](https://docs.moderne.io/user-documentation/moderne-platform/getting-started/data-tables): Recipe output reports
* [DevCenter](https://docs.moderne.io/user-documentation/moderne-platform/getting-started/dev-center): Moderne Platform key dashboard
* [Visualizations](https://docs.moderne.io/user-documentation/moderne-platform/getting-started/visualizations): Visual insights
* [Managing organizations](https://docs.moderne.io/user-documentation/moderne-platform/how-to-guides/managing-user-configured-organizations): Custom repository groups
* [Preconditions](https://docs.moderne.io/user-documentation/moderne-platform/how-to-guides/preconditions): Targeting specific repositories
* [Track migrations](https://docs.moderne.io/user-documentation/moderne-platform/how-to-guides/track-migrations): Monitor large-scale changes
* [Recipe execution via GraphQL](https://docs.moderne.io/user-documentation/moderne-platform/how-to-guides/recipe-execution-and-commits-with-graphql): API automation

## Moderne Platform (administrator guides)

* [Platform architecture](https://docs.moderne.io/administrator-documentation/moderne-platform/references/architecture): System design and components
* [Proof of value (admin)](https://docs.moderne.io/administrator-documentation/moderne-platform/getting-started/proof-of-value): Setup guide for POV
* [Admin pages](https://docs.moderne.io/administrator-documentation/moderne-platform/getting-started/admin-pages): Administrative interface
* [Configuring the Moderne agent](https://docs.moderne.io/administrator-documentation/moderne-platform/how-to-guides/agent-configuration/agent-config): Agent setup and configuration
* [Agent variables](https://docs.moderne.io/administrator-documentation/moderne-platform/how-to-guides/agent-configuration/agent-variables): Environment configuration
* [Mass ingest](https://docs.moderne.io/administrator-documentation/moderne-platform/how-to-guides/mass-ingest): Bulk repository ingestion
* [Troubleshooting LST issues](https://docs.moderne.io/administrator-documentation/moderne-platform/how-to-guides/troubleshooting-lst-issues): Debugging artifact problems
* [Lossless Semantic Trees (LSTs)](https://docs.moderne.io/administrator-documentation/moderne-platform/references/lossless-semantic-trees): Understanding LST format
* [How LST artifacts are produced](https://docs.moderne.io/administrator-documentation/moderne-platform/references/how-lst-artifacts-are-produced): Build process
* [Routing requests to agents](https://docs.moderne.io/administrator-documentation/moderne-platform/how-to-guides/agent-configuration/routing-requests-to-agents): Load balancing
* [Authentication](https://docs.moderne.io/administrator-documentation/moderne-platform/references/authentication): SSO and auth setup
* [GitHub permissions](https://docs.moderne.io/administrator-documentation/moderne-platform/references/github-permissions): Required OAuth scopes
* [Supported SCMs](https://docs.moderne.io/administrator-documentation/moderne-platform/references/supported-scms): Git platform compatibility
* [User roles](https://docs.moderne.io/administrator-documentation/moderne-platform/references/user-roles): Permissions model
* [AI architecture](https://docs.moderne.io/administrator-documentation/moderne-platform/references/ai-architecture): AI features

## Moderne CLI

* [Using the Moderne CLI](https://docs.moderne.io/user-documentation/moderne-cli/getting-started/cli-intro): Installation and setup
* [Moderne CLI workshop](https://docs.moderne.io/user-documentation/moderne-cli/getting-started/moderne-cli-workshop): Hands-on tutorial
* [CLI reference manual](https://docs.moderne.io/user-documentation/moderne-cli/cli-reference): Complete command reference
* [Moddy Desktop](https://docs.moderne.io/user-documentation/moddy/moddy-desktop): Desktop application for recipe development
* [CLI with DevCenter](https://docs.moderne.io/user-documentation/moderne-cli/getting-started/cli-dev-center): Using custom recipes
* [CLI with internal tools](https://docs.moderne.io/user-documentation/moderne-cli/getting-started/cli-internal-tools): Private artifact repositories
* [Batch changes](https://docs.moderne.io/user-documentation/moderne-cli/how-to-guides/batch-changes): Multi-repo transformations
* [Build steps](https://docs.moderne.io/user-documentation/moderne-cli/how-to-guides/build-steps): Custom build configuration
* [JDK selection and config](https://docs.moderne.io/user-documentation/moderne-cli/how-to-guides/jdk-selection-and-config): Java version management
* [Parallelism](https://docs.moderne.io/user-documentation/moderne-cli/how-to-guides/parallelism): Performance tuning
* [Afterburner](https://docs.moderne.io/user-documentation/moderne-cli/how-to-guides/afterburner): Execution optimization
* [Bazel support](https://docs.moderne.io/user-documentation/moderne-cli/how-to-guides/bazel-support): Bazel build integration
* [Air-gapped installation](https://docs.moderne.io/user-documentation/moderne-cli/how-to-guides/air-gapped-cli-install): Offline setup

## Moderne DX (on-premise deployment)

* [Moderne DX architecture](https://docs.moderne.io/administrator-documentation/moderne-dx/references/moderne-dx-architecture): On-premise deployment design
* [DX configuration](https://docs.moderne.io/administrator-documentation/moderne-dx/how-to-guides/dx-configuration): Setup and environment variables
* [DX variables](https://docs.moderne.io/administrator-documentation/moderne-dx/how-to-guides/dx-variables): Configuration reference
* [Mass ingest and run (DX)](https://docs.moderne.io/administrator-documentation/moderne-dx/how-to-guides/mass-ingest-and-run-dx): Bulk operations
* [Configure DX organizations](https://docs.moderne.io/administrator-documentation/moderne-dx/how-to-guides/configure-dx-organizations): Organization setup
* [Configure DX SSL](https://docs.moderne.io/administrator-documentation/moderne-dx/how-to-guides/configure-dx-ssl): SSL/TLS configuration
* [Artifactory access (DX)](https://docs.moderne.io/administrator-documentation/moderne-dx/how-to-guides/configure-dx-with-artifactory-access): Artifact repository integration
* [Maven repository access (DX)](https://docs.moderne.io/administrator-documentation/moderne-dx/how-to-guides/configure-dx-with-maven-repository-access): Maven configuration

## Moderne IDE Integration (JetBrains)

* [Installing and configuring the Moderne plugin for JetBrains IDEs](https://docs.moderne.io/user-documentation/moderne-ide-integration/how-to-guides/moderne-plugin-install): IntelliJ IDEA plugin setup
* [Creating recipes in IDE](https://docs.moderne.io/user-documentation/moderne-ide-integration/how-to-guides/creating-recipes): Recipe development
* [Debugging recipes](https://docs.moderne.io/user-documentation/moderne-ide-integration/how-to-guides/debugging-recipes): Recipe debugging
* [Code search in IDE](https://docs.moderne.io/user-documentation/moderne-ide-integration/how-to-guides/code-search): Semantic search
* [Refactor actions](https://docs.moderne.io/user-documentation/moderne-ide-integration/reference/refactor-actions): Available refactorings
* [Code search actions](https://docs.moderne.io/user-documentation/moderne-ide-integration/reference/code-search-actions): Search capabilities

## Recipe development

* [Fundamentals workshop overview](https://docs.moderne.io/hands-on-learning/fundamentals/workshop-overview): Recipe development basics
* [Module 1: Running recipes](https://docs.moderne.io/hands-on-learning/fundamentals/module-1-running-recipes): Discover and run existing recipes
* [Module 2: Recipe Builder](https://docs.moderne.io/hands-on-learning/fundamentals/module-2-recipe-builder): Visual recipe composition tool
* [Module 3: Development environment](https://docs.moderne.io/hands-on-learning/fundamentals/module-3-recipe-development-environment): Set up recipe dev environment
* [Module 4: Declarative YAML recipes](https://docs.moderne.io/hands-on-learning/fundamentals/module-4-declarative-yaml-recipes): Composing recipes with YAML
* [Module 5: Preconditions](https://docs.moderne.io/hands-on-learning/fundamentals/module-5-preconditions): Conditional recipe execution
* [Module 6: Testing recipes](https://docs.moderne.io/hands-on-learning/fundamentals/module-6-testing-recipes): Recipe testing patterns
* [Module 7: Refaster recipes](https://docs.moderne.io/hands-on-learning/fundamentals/module-7-refaster-recipes): Template-based transformations
* [Module 8: Imperative recipes](https://docs.moderne.io/hands-on-learning/fundamentals/module-8-imperative-recipes): Writing Java-based recipes
* [Advanced workshop overview](https://docs.moderne.io/hands-on-learning/advanced/workshop-overview): Advanced techniques
* [Advanced Module 1: Development environment](https://docs.moderne.io/hands-on-learning/advanced/module-1-recipe-development-environment): Advanced dev setup
* [Advanced Module 2: Data tables](https://docs.moderne.io/hands-on-learning/advanced/module-2-data-tables): Generating structured reports
* [Advanced Module 3: Scanning recipes](https://docs.moderne.io/hands-on-learning/advanced/module-3-scanning-recipes): Cross-file analysis patterns
* [Advanced Module 4: Traits](https://docs.moderne.io/hands-on-learning/advanced/module-4-traits): Semantic element matching
* [Recipe authoring guide](https://docs.moderne.io/user-documentation/recipes/recipe-authoring): Best practices
* [Common custom recipes](https://docs.moderne.io/user-documentation/recipes/common-custom-recipes): Example patterns
* [Conventions and best practices](https://docs.moderne.io/user-documentation/recipes/conventions-and-best-practices): Style guide
* [Contributing to OpenRewrite](https://docs.moderne.io/user-documentation/recipes/contributing-to-openrewrite): Open source contribution

## OpenRewrite advanced program analysis

### Overview

* [Advanced analysis techniques](https://docs.moderne.io/openrewrite-advanced-program-analysis/advanced-analysis-techniques): Introduction to advanced analysis

### Control flow analysis

* [Control flow introduction](https://docs.moderne.io/openrewrite-advanced-program-analysis/control-flow/introduction): CFG fundamentals
* [Building control flow graphs (CFGs)](https://docs.moderne.io/openrewrite-advanced-program-analysis/control-flow/building-cfgs): Constructing CFGs from code
* [Reachability analysis](https://docs.moderne.io/openrewrite-advanced-program-analysis/control-flow/reachability-analysis): Determining executable code paths
* [Loop analysis](https://docs.moderne.io/openrewrite-advanced-program-analysis/control-flow/loop-analysis): Detecting and analyzing loops
* [Dominance analysis](https://docs.moderne.io/openrewrite-advanced-program-analysis/control-flow/dominance-analysis): Control dependencies and dominator trees

### Data flow analysis

* [Data flow introduction](https://docs.moderne.io/openrewrite-advanced-program-analysis/data-flow/introduction): Data flow fundamentals
* [Building your first data flow analysis](https://docs.moderne.io/openrewrite-advanced-program-analysis/data-flow/building-your-first-data-flow-analysis): Step-by-step guide
* [Liveness analysis](https://docs.moderne.io/openrewrite-advanced-program-analysis/data-flow/liveness-analysis): Tracking variable usage and lifetime
* [Reaching definitions](https://docs.moderne.io/openrewrite-advanced-program-analysis/data-flow/reaching-definitions): Tracking variable definition sources
* [Method summary analysis](https://docs.moderne.io/openrewrite-advanced-program-analysis/data-flow/method-summary-analysis): Compact method behavior representation
* [Inter-procedural analysis](https://docs.moderne.io/openrewrite-advanced-program-analysis/data-flow/inter-procedural-analysis): Cross-method data flow tracking

### Taint analysis

* [Taint analysis introduction](https://docs.moderne.io/openrewrite-advanced-program-analysis/taint-analysis/introduction): Tracking untrusted data flow
* [Comprehensive taint analysis guide](https://docs.moderne.io/openrewrite-advanced-program-analysis/taint-analysis/comprehensive-guide): Complete taint analysis implementation

### Security

* [Security analysis overview](https://docs.moderne.io/openrewrite-advanced-program-analysis/security/overview): Security vulnerability detection
* [SQL injection detection](https://docs.moderne.io/openrewrite-advanced-program-analysis/security/sql-injection): Finding SQL injection vulnerabilities
* [Command injection detection](https://docs.moderne.io/openrewrite-advanced-program-analysis/security/command-injection): Detecting command injection risks
* [Cross-site scripting (XSS)](https://docs.moderne.io/openrewrite-advanced-program-analysis/security/xss): XSS vulnerability detection
* [Path traversal detection](https://docs.moderne.io/openrewrite-advanced-program-analysis/security/path-traversal): File path injection detection
* [LDAP injection detection](https://docs.moderne.io/openrewrite-advanced-program-analysis/security/ldap-injection): LDAP injection vulnerability detection
* [XXE (XML External Entity) detection](https://docs.moderne.io/openrewrite-advanced-program-analysis/security/xxe): XML external entity attack detection
* [PII protection](https://docs.moderne.io/openrewrite-advanced-program-analysis/security/pii-protection): Detecting PII exposure risks

## Releases and changelogs

* [Platform changelog](https://docs.moderne.io/releases/changelog): Platform release notes
* [CLI releases](https://docs.moderne.io/releases/cli-releases): CLI version history
* [CLI DX releases](https://docs.moderne.io/releases/cli-dx): CLI for DX releases
* [Agent releases](https://docs.moderne.io/releases/agent-releases): Agent version history
* [Proprietary recipe changelog](https://docs.moderne.io/releases/proprietary-recipe-changelog): Recipe updates

## Core concepts

* **Recipe**: A program that makes automated changes to source code
* **LST (Lossless Semantic Tree)**: Type-attributed, format-preserving tree representation of source code
* **Visitor**: Pattern for traversing and modifying LSTs
* **Marker**: Metadata attached to LST elements
* **Data Table**: Structured output from recipes for reporting

## Resources

* Public instance: https://app.moderne.io
* OpenRewrite docs: https://docs.openrewrite.org
* Contact: https://www.moderne.ai/contact-us
